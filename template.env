######### Template: ./.env
## Copy this file to './.env' and edit as necessary

###### Common NodeJS and Packages
NODE_ENV=development

###### Defaults
### Logging
# Comment out LOG_FILE to disable file logging
LOG_FILE=node-route53-dynamic-dns.log
## In Severity Order: error | warn | info | http | verbose | debug | silly
LOG_LEVEL=verbose

### Server
## When set, bind to a specific hostname or IP. Otherwise leave commented to listen on all addresses.
# BIND_HOST=
## By default, expose the health check server that reports the current IP and host records. Comment out BIND_PORT to disable
BIND_PORT=61080

### Behavior
## Poll for a change in public IP at this interval
IP_CHECK_INTERVAL_SECONDS=300
## The app can handle not getting a public IPv4 or IPv6, but a not found IP will slow down the update.
IP_V6_ENABLED=true
## TODO implement, currently cache mode only
## When true, only get the initial state of the DNS records to determine if they should be updated. If another person or process updates
## the records to not match the current IP, this process won't update it until the IP changes or the process is restarted. In normal operations 
## this makes updates quicker and less expensive when we expect nothing else to change the records.
CACHE_DNS_RECORDS=true

###### Required
## A JSON array of hostnames to attempt to update whenever the public IP changes. The AWS account must have access to the zones that the 
## hostname belongs to. The service will look for any A and AAAA records that match the name and update the IPv4 and IPv6 respectively
## to the current public IP. If the IPv4 or IPv6 can't be determined (no internet access, no IPv6 assigned, etc.), do not perform an
## update to the A or AAAA record respectively. If no A or AAAA records exist at startup time, skip updating the hostname.
HOSTNAMES_TO_UPDATE=`[
  "myhost.public.tld",
  "@.myhost.public.tld",
  "*.myhost.public.tld"
]`

### Credentials
AWS_ACCESS_KEY_ID=
AWS_ACCESS_KEY_SECRET=
